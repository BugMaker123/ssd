ribbon.ConnectTimeout=30000
ribbon.ReadTimeout=7000
server.connectionTimeout=8000ms

#sentinel配置
spring.cloud.sentinel.transport.dashboard=192.168.230.101:8858
spring.cloud.sentinel.eager=true
spring.cloud.sentinel.transport.clientIp=192.168.137.11
spring.cloud.sentinel.transport.port=8719




#redis配置
spring.redis.host=${spring.redis.host}
spring.redis.port=${spring.redis.port}
spring.redis.database=${spring.redis.database}
spring.redis.jedis.pool.max-active=${spring.redis.jedis.pool.max-active}
spring.redis.jedis.pool.max-idle=${spring.redis.jedis.pool.max-idle}
spring.redis.jedis.pool.min-idle=${spring.redis.jedis.pool.min-idle}
spring.redis.timeout=${spring.redis.timeout}

#mysql配置
#spring.datasource.username=${spring.datasource.username}
#spring.datasource.password=${spring.datasource.password}
#spring.datasource.driverClassName=${spring.datasource.driverClassName}
#spring.datasource.url=${spring.datasource.url}

#分库分表配置
#分库分表配置
#spring.shardingsphere.datasource.names=ds-master-0
spring.shardingsphere.datasource.names=ds-master-0,ds-slave-0-1,ds-master-1,ds-slave-1-1
#定义主库1属性
spring.shardingsphere.datasource.ds-master-0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-master-0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds-master-0.jdbc-url=jdbc:mysql://192.168.230.101:3306/ds0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.ds-master-0.username=root
spring.shardingsphere.datasource.ds-master-0.password=root123456
#定义从库1属性
spring.shardingsphere.datasource.ds-slave-0-1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-slave-0-1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds-slave-0-1.jdbc-url=jdbc:mysql://192.168.230.102:3306/ds0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.ds-slave-0-1.username=root
spring.shardingsphere.datasource.ds-slave-0-1.password=root123456

#定义主库2属性
spring.shardingsphere.datasource.ds-master-1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-master-1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds-master-1.jdbc-url=jdbc:mysql://192.168.230.101:3306/ds1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.ds-master-1.username=root
spring.shardingsphere.datasource.ds-master-1.password=root123456
#定义从库1属性

spring.shardingsphere.datasource.ds-slave-1-1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds-slave-1-1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds-slave-1-1.jdbc-url=jdbc:mysql://192.168.230.102:3306/ds1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.ds-slave-1-1.username=root
spring.shardingsphere.datasource.ds-slave-1-1.password=root123456


#定义要分的表  t_user为表名，id为分片键，ds0为分库规则，ds0${0..1}为分表规则->表示为t_user_0,t_user_1

spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds-master-0.t_user_$->{0..1}
#选择业务主键为分片键
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
#雪花算法生成主键
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE
#雪花算法生成主键的机器ID
spring.shardingsphere.sharding.tables.t_user.key-generator.worker-id=1

#####################分表策略#####################
# 分片键
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
# 分片算法  user_id % 2
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user_$->{user_id%2}

#分库
#spring.shardingsphere.sharding.tables.t_user.database-strategy.inline.sharding-column=user_id
##分库算法
#spring.shardingsphere.sharding.tables.t_user.database-strategy.inline.algorithm-expression=t_user_$->{user_id%2}



#读写分离配置
#spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=ds-master-0
#spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names[0]=ds-slave-0-1

#####################shardingsphere的两个属性#####################
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true

#es配置
spring.data.elasticsearch.cluster-nodes=${spring.data.elasticsearch.cluster-nodes}
spring.data.elasticsearch.cluster-name=${spring.data.elasticsearch.cluster-name}
spring.data.elasticsearch.repositories.enabled=${spring.data.elasticsearch.repositories.enabled}


management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
management.metrics.export.jmx.enabled=true
management.endpoints.web.base-path=/
management.endpoint.shutdown.enabled=true

logging.level.cn.com = debug
